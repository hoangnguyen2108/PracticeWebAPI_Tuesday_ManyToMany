// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PracticeWebAPI_Tuesday.Data;

#nullable disable

namespace PracticeWebAPI_Tuesday.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250902091021_initialdata")]
    partial class initialdata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PracticeWebAPI_Tuesday.Model.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseName = "Course1"
                        },
                        new
                        {
                            CourseId = 2,
                            CourseName = "Course2"
                        });
                });

            modelBuilder.Entity("PracticeWebAPI_Tuesday.Model.EnrollmentSC", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 1,
                            CourseId = 2
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 1
                        });
                });

            modelBuilder.Entity("PracticeWebAPI_Tuesday.Model.StudentClass", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            DateOfBirth = new DateOnly(1999, 9, 19),
                            StudentName = "Studnet1"
                        },
                        new
                        {
                            StudentId = 2,
                            DateOfBirth = new DateOnly(2000, 10, 20),
                            StudentName = "Student2"
                        },
                        new
                        {
                            StudentId = 3,
                            DateOfBirth = new DateOnly(2001, 11, 21),
                            StudentName = "Student3"
                        });
                });

            modelBuilder.Entity("PracticeWebAPI_Tuesday.Model.EnrollmentSC", b =>
                {
                    b.HasOne("PracticeWebAPI_Tuesday.Model.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PracticeWebAPI_Tuesday.Model.StudentClass", "StudentClass")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("StudentClass");
                });

            modelBuilder.Entity("PracticeWebAPI_Tuesday.Model.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("PracticeWebAPI_Tuesday.Model.StudentClass", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
